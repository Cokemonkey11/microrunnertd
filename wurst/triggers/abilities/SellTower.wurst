package SellTower

import FloatText
import HashMap
import LinkedList
import Sounds
import RegisterEvents
import UnitApi

native GetUnitGoldCost(int id) returns int

constant ID_THALL_BOX            = 'h02T'
constant ID_ABILITY_SPLENDOR     = 'A01C'
constant ID_ENDOWMENT            = 'A01E'
constant ID_ENDOWMENT_PAS        = 'A01F'
constant ID_ENDOWMENT_BLACK      = 'A01H'
constant ID_ENDOWMENT_BLACK_MANA = 'A01J'
constant ID_ENDOWMENT_BLACK_MR   = 'A01I'

constant RADIUS = 90. + 16. * 2.

constant FX  = "Abilities\\Spells\\Items\\ResourceItems\\ResourceEffectTarget.mdl"
constant SND = "Abilities\\Spells\\Items\\ResourceItems\\ReceiveGold.wav"

// Not intentended to be destroyed.
public abstract class SellCallback
	abstract function call_(unit sold_unit)

constant sell_hooks = new LinkedList<SellCallback>()

public function register_sell_hook(SellCallback c)
	sell_hooks.add(c)

constant grp = CreateGroup()

public constant endowments      = new HashMap<unit, unit>()
public constant blackEndowments = new HashMap<unit, unit>()

function hasDoubleValue(unit u) returns bool
	var splendorCheck = false

	grp.enumUnitsInRange(vec2(u.getX(), u.getY()), RADIUS)
	for iter from grp
		if iter.isAlive() and iter.getTypeId() == ID_THALL_BOX and iter.getOwner() == u.getOwner() and iter.hasAbility(ID_ABILITY_SPLENDOR)
			splendorCheck = true

	return splendorCheck

function checkEndowments(unit metal)
	if endowments.has(metal)
		endowments.get(metal)
			..removeAbility(ID_ENDOWMENT)
			..removeAbility(ID_ENDOWMENT_PAS)

	if blackEndowments.has(metal)
		blackEndowments.get(metal)
			..removeAbility(ID_ENDOWMENT_BLACK)
			..removeAbility(ID_ENDOWMENT_BLACK_MANA)
			..removeAbility(ID_ENDOWMENT_BLACK_MR)

constant onSell = CreateTrigger()
public function registerOnSell(code c)
	onSell.addCondition(Condition(c))

function act()
	let tU = GetTriggerUnit()
	let x  = GetUnitX(tU)
	let y  = GetUnitY(tU)
	let p  = GetOwningPlayer(tU)
	var i  = GetUnitGoldCost(GetUnitTypeId(tU))

	onSell.evaluate()

	if not hasDoubleValue(tU)
		i = R2I(i / 2.)

	checkEndowments(tU)

	sell_hooks.forEach() (SellCallback t) ->
		t.call_(tU)

	SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + i)
	FloatText.bountyPlayer(x, y, i, p)
	DestroyEffect(AddSpecialEffect(FX, x, y))
	Sounds.play(SND, 1., 127)

	RemoveUnit(tU)

init
	registerSpellEffectEvent(UnitApi.ID_SELL_TOWER, function act)

	Sounds.preload(SND)
