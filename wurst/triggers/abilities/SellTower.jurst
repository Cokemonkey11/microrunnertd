package SellTower
	import FloatText
	import Sounds
	import RegisterPlayerUnitEvent
	import ClosureForGroups

	native GetUnitGoldCost takes int id returns int

	constant int ID                      = 'A00O'
	constant int ID_THALL_BOX            = 'h02T'
	constant int ID_ABILITY_SPLENDOR     = 'A01C'
	constant int ID_ENDOWMENT            = 'A01E'
	constant int ID_ENDOWMENT_PAS        = 'A01F'
	constant int ID_ENDOWMENT_BLACK      = 'A01H'
	constant int ID_ENDOWMENT_BLACK_MANA = 'A01J'
	constant int ID_ENDOWMENT_BLACK_MR   = 'A01I'

	constant real RADIUS = 90. + 16. * 3.

	constant string FX  = "Abilities\\Spells\\Items\\ResourceItems\\ResourceEffectTarget.mdl"
	constant string SND = "Abilities\\Spells\\Items\\ResourceItems\\ReceiveGold.wav"

	bool splendorCheck

	public Table endowments      = new Table
	public Table blackEndowments = new Table

	function hasDoubleValue(unit u) returns bool
		splendorCheck = false

		forUnitsInRange(vec2(u.getX(), u.getY()), RADIUS, (unit iter) -> begin
			if iter.getTypeId() == ID_THALL_BOX and iter.getOwner() == u.getOwner() and iter.hasAbility(ID_ABILITY_SPLENDOR)
				splendorCheck = true
			end
		end)

		return splendorCheck
	end

	function checkEndowments(unit metal)
		if Table.ht.hasHandle(endowments      castTo int, metal.getHandleId())
			endowments.loadUnit(metal.getHandleId())..removeAbility(ID_ENDOWMENT)
			                                        ..removeAbility(ID_ENDOWMENT_PAS)
		end

		if Table.ht.hasHandle(blackEndowments castTo int, metal.getHandleId())
			blackEndowments.loadUnit(metal.getHandleId())..removeAbility(ID_ENDOWMENT_BLACK)
			                                             ..removeAbility(ID_ENDOWMENT_BLACK_MANA)
			                                             ..removeAbility(ID_ENDOWMENT_BLACK_MR)
		end
	end

	function act()
		if GetSpellAbilityId() == ID
			unit tU   = GetTriggerUnit()
			real x    = GetUnitX(tU)
			real y    = GetUnitY(tU)
			player p  = GetOwningPlayer(tU)
			int i     = GetUnitGoldCost(GetUnitTypeId(tU))

			if not hasDoubleValue(tU)
				i = R2I(i / 2.)
			end

			checkEndowments(tU)

			SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + i)
			FloatText.bountyPlayer(x, y, i, p)
			DestroyEffect(AddSpecialEffect(FX, x,y))
			Sounds.play(SND, 1., 127)

			RemoveUnit(tU)
		end
	end

	init
		registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, function act)

		Sounds.preload(SND)
	end
