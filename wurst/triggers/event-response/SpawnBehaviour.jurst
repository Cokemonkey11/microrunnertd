package SpawnBehaviour
	import Units
	import Players
	import ClosureTimers

	native UnitAlive takes unit u returns boolean

	constant real AI_FIDELITY = 1.

	group grp = CreateGroup()

	function getClosestRunner takes unit q returns unit
		integer index = 0
		unit u = null
		real r = 9999999.
		real x
		real y
		loop
			exitwhen index > 1
			x = GetUnitX(q) - GetUnitX(Units.runners[index])
			y = GetUnitY(q) - GetUnitY(Units.runners[index])
			if UnitAlive(Units.runners[index]) and (x * x) + (y * y) < r then
				r = (x * x) + (y * y)
				u = Units.runners[index]
			endif
			index++
		endloop
		return u
	end

	init
		BJDebugMsg("hello world")
		doPeriodically(AI_FIDELITY, (CallbackPeriodic _) -> begin
			unit fst
			unit targ
			BJDebugMsg("AI")

			if GetPlayerState(Players.creeps,PLAYER_STATE_RESOURCE_FOOD_USED) > 0 then
				BJDebugMsg("AI ON")
				GroupEnumUnitsOfPlayer(grp,Players.creeps,null)
				loop
					fst = FirstOfGroup(grp)
					exitwhen fst==null
					targ = getClosestRunner(fst)
					if UnitAlive(fst) and targ != null then
						IssuePointOrder(fst,"attack",GetUnitX(targ),GetUnitY(targ))
					endif
					GroupRemoveUnit(grp,fst)
				endloop
			endif
		end)
	end
