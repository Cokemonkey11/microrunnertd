package Defeat
import UnitApi
import Players
import Game
import Sounds
import RegisterEvents

native UnitAlive(unit u) returns boolean

constant tab = new Table
constant DEFEAT = "Sound\\Interface\\QuestFailed.wav"
constant OOPS   = "Sound\\Interface\\Rescue.wav"

function a()
	var count = 0
	let id = GetUnitTypeId(GetTriggerUnit())

	if tab.hasInt(id)
		if Players.playing[0] and UnitAlive(UnitApi.runners[0])
			count++

		if Players.playing[1] and UnitAlive(UnitApi.runners[1])
			count++

		if count == 0
			DisplayTextToPlayer(Players.locl, 0., 0., "|cffffcc00Defeat!|r Better luck next time. This game will end in |cffffcc0030|r seconds." + /*
				*/ "\n\nOn the bright side, you made it to round |cffffcc00" + I2S(Game.round) + "|r!")
			Sounds.play(DEFEAT, 0.75, 127)
			Game._end()
		else
			DisplayTextToPlayer(Players.locl, 0., 0., "|cffffcc00Warning:|r A runner has died!")
			Sounds.play(OOPS, 1., 127)

init
	registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function a)

	tab.saveInt(UnitApi.ID_RUNNER_SPIRIT, 1)
	tab.saveInt(UnitApi.ID_RUNNER_WASTE,  1)
	tab.saveInt(UnitApi.ID_RUNNER_METAL,  1)
	tab.saveInt(UnitApi.ID_RUNNER_BEER,   1)

	Sounds.preload(DEFEAT)
	Sounds.preload(OOPS)
