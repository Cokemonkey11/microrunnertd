package Invulnerable

import ClosureTimers
import LinkedListModule

public class Invulnerable
	use LinkedListModule

	private static constant ID_INVULNERABLE = 'Avul'

	unit which
	real durationLeft

	static function apply(unit u, real minDuration)
		// First check if this unit is already within the locking set.
		for invuln from staticItr()
			if invuln.which == u
				if minDuration > invuln.durationLeft
					invuln.durationLeft = minDuration

				return

		// If none found, make a new one.
		let wrapper = new Invulnerable
		wrapper.which = u
		u.addAbility(ID_INVULNERABLE)
		wrapper.durationLeft = minDuration

		if size == 1
			// Timer was off, have to restart it.
			doPeriodically(ANIMATION_PERIOD) (CallbackPeriodic cb) ->

				for wrapr from staticItr()
					wrapr.durationLeft -= ANIMATION_PERIOD

					if wrapr.durationLeft <= 0.
						wrapr.which.removeAbility(ID_INVULNERABLE)
						destroy wrapr

				if size == 0
					destroy cb
